#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
cd $SCRIPT_DIR
echo -e "\033[34;1mInstalling $(basename $SCRIPT_DIR)...\033[0m"

function isProtected () {
    # isProtected "$HOME/$FILE" && echo -e " \033[31m$FILE is protected\033[0m" && continue
    [[ ! -f "$SCRIPT_DIR/../.protected" ]] && return 1
    mapfile -t < $SCRIPT_DIR/../.protected
    protectedFiles="${MAPFILE[@]}"
    for ProtectedFile in $protectedFiles; do
        [[ "$ProtectedFile" == "$*" ]] && return 0
    done
    return 1
}

# Install /home files
if [ -d $SCRIPT_DIR/home ]; then 
    echo -e "\033[1mLinking up home\033[0m"
    cd $SCRIPT_DIR/home
    for FILE in $(rg --files --hidden); do
        isProtected "$HOME/$FILE" && echo -e " \033[31m$FILE is protected\033[0m" && continue
        # handle SSH files
        [[ $(dirname "$HOME/$FILE") == "$HOME/.ssh" ]] &&
            echo -e " \033[2mCopying $FILE\033[0m" &&
            cp -f "$SCRIPT_DIR/home/$FILE" "$HOME/$FILE" &&
            continue
        
        echo -e " \033[2mCreating softlink for $FILE\033[0m"
        [ ! -d $(dirname "$HOME/$FILE") ] && mkdir -p $(dirname "$HOME/$FILE")
        ln -sf "$SCRIPT_DIR/home/$FILE" "$HOME/$FILE"
    done
fi

# Install /bin files
if [ -d $SCRIPT_DIR/bin ]; then 
    echo -e "\033[1mInstall bin scripts\033[0m"
    cd $SCRIPT_DIR/bin
    for FILE in $(rg --files --hidden); do
        isProtected "/usr/bin/$FILE" && echo -e " \033[31m$FILE is protected\033[0m" && continue
        echo -e " \033[2mCopying $FILE\033[0m"
        sudo cp -f $FILE /usr/bin/$FILE
    done
fi

# Install /etc files (Manual)
echo -e "\033[1mSetting etc files\033[0m"
cd $SCRIPT_DIR/etc/X11/xorg.conf.d/
echo -e " \033[2mCopying 00-keyboard.conf\033[0m"
sudo cp -f "00-keyboard.conf" "/etc/X11/xorg.conf.d/00-keyboard.conf"

#echo -e " \033[2mCopying lightdm configs\033[0m"
#cd $SCRIPT_DIR/etc/lightdm/
#sudo cp -f "lightdm-webkit2-greeter.conf"   "/etc/lightdm/lightdm-webkit2-greeter.conf"
#sudo cp -f "lightdm.conf"                   "/etc/lightdm/lightdm.conf"

echo -e " \033[2mCopying modprobe.d configs\033[0m"
cd $SCRIPT_DIR/etc/modprobe.d/
sudo cp -f "nobeep.conf" "/etc/modprobe.d/nobeep.conf"

echo -e " \033[2mCopying pacman.conf\033[0m"
cd $SCRIPT_DIR/etc/
sudo cp -f "pacman.conf" "/etc/pacman.conf"


echo -e "\033[1mSetting up terminal aliases\033[0m"
cd /usr/bin/
for TERM in term gnome-terminal default-terminal TerminalEmulator; do
    echo -e " \033[2mCreating softlink for $TERM => terminal\033[0m"
    sudo ln -sf terminal $TERM
done

# Install /usr files (Manual)
echo -e "\033[1mSetting usr files\033[0m"

echo -e " \033[2mAdding conky\033[0m"
[ ! -d "/usr/share/conky/" ] && sudo mkdir -p /usr/share/conky/
sudo cp -rf $SCRIPT_DIR/usr/share/conky/* /usr/share/conky/.

echo -e " \033[2mAdding services\033[0m"
[ ! -d "/usr/share/dbus-1/services" ] && sudo mkdir -p /usr/share/dbus-1/services
sudo cp -rf $SCRIPT_DIR/usr/share/dbus-1/services/* /usr/share/dbus-1/services/.


# Get tools folder if non exist
if [ ! -d $SCRIPT_DIR/../Tools ]; then
    cd $SCRIPT_DIR/..
    git clone git@github.com:AndreasBrostrom/Tools.git
fi
if [ -d $SCRIPT_DIR/../Tools ]; then
    echo -e "\033[1mFetching scripts from Tools\033[0m"
    $SCRIPT_DIR/../Tools/installScripts ln
fi


# Get ssh folder if non exist
if [ ! -d $SCRIPT_DIR/../secure ]; then
    cd $SCRIPT_DIR/..
    git clone git@github.com:AndreasBrostrom/secure.git
fi
if [ -d $SCRIPT_DIR/../secure/ssh ]; then
    echo -e "\033[1mHome secret from secure\033[0m"
    cd $SCRIPT_DIR/../secure/ssh
    [ ! -d "$HOME/.ssh" ] && mkdir -p $HOME/.ssh
    EXISTING=($(ls $HOME/.ssh))
    for FILE in $(rg --files --hidden); do
        echo -e " \033[2mCopying $FILE\033[0m"
        cp -f $FILE $HOME/.ssh/$FILE
    done
fi

# SSH permissions
echo -e " \033[2mFixing SSH permissions\033[0m"
chmod 700 $HOME/.ssh
chmod 600 $HOME/.ssh/config
chmod 600 $HOME/.ssh/authorized_keys
chmod 600 $HOME/.ssh/*id_rsa
chmod 644 $HOME/.ssh/*.pub


# ##
# If not i3 remove the i3 configs
#echo -e "\033[1mChecking desktop enviroment\033[0m"
#if [ ! "$XDG_CURRENT_DESKTOP" == "i3" ]; then
#    echo -e " \033[2mi3 not used removing configs.\033[0m"
#    rm -rf $HOME/.i3
#    rm -rf $HOME/.config/i3status
#    rm -rf $HOME/.config/i3-scrot.conf
#    rm -rf $HOME/.config/morc_menu
#    
#    sudo rm -f  /bin/start_conky_evul
#    sudo rm -rf /usr/share/conky
#fi
#
## If WSL remove unnecessary configs
#if grep -qi microsoft /proc/version; then
#    echo -e " \033[2mWSL used removing unnecessary configs.\033[0m"
#    sudo rm -f /etc/samba/smb.conf
#    sudo rm -f /etc/X11/xorg.conf.d/00-keyboard.conf
#    sudo rm -f /etc/X11/xorg.conf.d/91-monitor-office.conf
#    sudo rm -f /etc/X11/xorg.conf.d/92-xpra-virtual.conf
#fi
