#!/bin/bash
_repoDir="$HOME/Repositories"

_status=()

_arg_update="false"
_arg_commit="false"
_error="false"

# Handle Arguments
case "$1" in
    --upgrade|-u|--pull|-p)
        _arg_update="true"
        ;;
    --commit|-c|--push|-P)
        _arg_commit="true"
        ;;
esac

echo -e "\e[1mChecking dotfile repo status\e[0m"
if [[ ! -d "$_repoDir" ]]; then
    echo "Repositories directory not found..."
    exit 1
else
    pathString=("\e]8;;$_repoDir\a$_repoDir\e]8;;\a\e[0m")
    echo -e "\e[2mRepo path: $pathString\e[0m"
fi

if [[ "$_arg_update" == "true" ]]; then
    echo -e "\e[2mUpdating repositories if no changes are found\e[0m"
fi

if [[ "$_arg_status" == "true" ]]; then
    echo -e "\e[2mShowing git status for each repository\e[0m"
fi


# Collect issues
cd $_repoDir
_dotfiles=(
    "dotfiles"
    "dotfiles_private"
    "wdotfiles"
    "secure"
    "Tools"
    "tools"
    "Scripts"
    "scripts"
    "win-upgrade"
)
for _path in "${_dotfiles[@]}"; do
    [[ ! -d "$_path" ]] && continue

    # Check we have any changes
    if [[ ! $(git -C $_repoDir/$_path status | grep nothin) || $(git -C $_repoDir/$_path status | grep Untracked) ]]; then

        # if we have changes and want to commit them run the commit else just show the status
        if [[ "$_arg_commit" == "true" ]]; then
            _gitStatus="\e[2m$(git -C "$_repoDir/$_path" status --porcelain)\e[0m"
            git -C "$_repoDir/$_path" add --all
            git -C "$_repoDir/$_path" commit --all --quiet
            # check if successful
            if [[ $? -ne 0 ]]; then
                _error="true"
                _status+=("\e]8;;$_repoDir/$_path\a$_path\e]8;;\a\e[0m: \e[31mfailed to committing changes\e[0m")
            else
                git -C "$_repoDir/$_path" push --quiet
                if [[ $? -ne 0 ]]; then
                    _error="true"
                    _status+=("\e]8;;$_repoDir/$_path\a$_path\e]8;;\a\e[0m: \e[31mfailed to push changes\e[0m")
                else 
                    _status+=("\e]8;;$_repoDir/$_path\a$_path\e]8;;\a\e[0m: committed and pushed changes")
                fi
            fi
            _status+=("$_gitStatus")
        else 
            _status+=("\e]8;;$_repoDir/$_path\a$_path\e]8;;\a\e[0m: uncommitted changes")
            _gitStatus="\e[2m$(git -C "$_repoDir/$_path" status --porcelain)\e[0m"
            _status+=("$_gitStatus")
        fi
        continue
    fi

    # Run updates if no changes are found
    if [[ "$_arg_update" == "true" ]]; then
        _gitPull="$(git -C "$_repoDir/$_path" pull)"
        [[ $(echo $_gitPull | grep Already) ]] && continue
        _gitChanges="\e[2m$(git -C "$_repoDir/$_path" diff --name-only HEAD@{1})\e[0m"
        _status+=("\e]8;;$_repoDir/$_path\a$_path\e]8;;\a\e[0m: repository updated")
        _status+=("$_gitChanges")
    fi
done

# Print sitrep
if [ ${#_status[@]} -gt 0 ]; then
    echo -e "\n\e[1mCurrent status:\e[0m"
    for _sitrep in "${_status[@]}"; do
        echo -e "$_sitrep"
    done
else
    echo -e "\n\e[1mCurrent status:\e[0m"
    echo "All good"
fi
